// <auto-generated />
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    partial class DDDSample1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DDDSample1.Domain.Deliveries.Delivery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<int>("Mass")
                        .HasColumnType("int");

                    b.Property<int>("TimeLoad")
                        .HasColumnType("int");

                    b.Property<int>("TimeUnload")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("DDDSample1.Domain.Warehouses.Warehouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses", (string)null);
                });

            modelBuilder.Entity("DDDSample1.Domain.Deliveries.Delivery", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Deliveries.DeliveryIdentifier", "DIdentifier", b1 =>
                        {
                            b1.Property<string>("DeliveryId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("DIdentifier")
                                .HasColumnType("longtext");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.Navigation("DIdentifier")
                        .IsRequired();
                });

            modelBuilder.Entity("DDDSample1.Domain.Warehouses.Warehouse", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Warehouses.Address", "Address", b1 =>
                        {
                            b1.Property<string>("WarehouseId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("City")
                                .HasColumnType("longtext");

                            b1.Property<int>("DoorNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Street")
                                .HasColumnType("longtext");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("longtext");

                            b1.HasKey("WarehouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Warehouses.Altitude", "WarehouseAltitude", b1 =>
                        {
                            b1.Property<string>("WarehouseId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("WarehouseAltitude")
                                .HasColumnType("longtext");

                            b1.HasKey("WarehouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Warehouses.Coordinate", "Coordinates", b1 =>
                        {
                            b1.Property<string>("WarehouseId")
                                .HasColumnType("varchar(255)");

                            b1.Property<float>("Latitude")
                                .HasColumnType("float");

                            b1.Property<float>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("WarehouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Warehouses.WarehouseDesignation", "Designation", b1 =>
                        {
                            b1.Property<string>("WarehouseId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("Designation")
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)");

                            b1.HasKey("WarehouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Warehouses.WarehouseId", "WarehouseIdentifier", b1 =>
                        {
                            b1.Property<string>("WarehouseId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("WarehouseIdentifier")
                                .HasMaxLength(3)
                                .HasColumnType("varchar(3)");

                            b1.HasKey("WarehouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Coordinates");

                    b.Navigation("Designation")
                        .IsRequired();

                    b.Navigation("WarehouseAltitude");

                    b.Navigation("WarehouseIdentifier")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
